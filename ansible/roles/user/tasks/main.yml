---
- name: Set facts
  ansible.builtin.set_fact:
    ssh_pub_keys: "{{ lookup('fileglob', '../ssh_pub_keys/*.pub', wantlist=True) }}"

- name: "Create {{ user_passwordless_sudo_group }} group"
  ansible.builtin.group:
    name: "{{ user_passwordless_sudo_group }}"
    state: present

- name: Restrict access to /etc/sudoers.d
  ansible.builtin.file:
    path: /etc/sudoers.d
    mode: '0750'

- name: "Allow {{ user_passwordless_sudo_group }} group to have passwordless sudo"
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%{{ user_passwordless_sudo_group }}'
    line: '%{{ user_passwordless_sudo_group }} ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Add users
  ansible.builtin.user:
    name: "{{ item | basename | replace('.pub', '') }}"
    group: "{{ user_passwordless_sudo_group }}"
    state: present
    createhome: yes
    shell: /bin/bash
  with_items: "{{ ssh_pub_keys }}"

- name: Set authorized key for each user
  ansible.posix.authorized_key:
    user: "{{ item | basename | replace('.pub', '') }}"
    state: present
    key: "{{ lookup('file', item) }}"
    exclusive: yes
  with_items: "{{ ssh_pub_keys }}"

- name: Enforce umask to 027
  ansible.builtin.lineinfile:
    dest: "{{ file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "present"
  with_items:
    - { regexp: '^(# )?session optional        pam_umask.so', line: 'session optional        pam_umask.so umask=027', file: "/etc/pam.d/common-session" }
    - { regexp: '^(# )?UMASK', line: 'UMASK           027', file: "/etc/login.defs" }