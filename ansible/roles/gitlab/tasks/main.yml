---
- name: Open required ports
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  with_items:
    - "80"
    - "443"

- name: Install required packages
  ansible.builtin.apt:
    pkg:
      - curl
      - ca-certificates
      - openssh-server
      - tzdata
    state: present

- name: Check if GitLab is already installed
  ansible.builtin.stat:
    path: /usr/bin/gitlab-ctl
  register: gitlab

- name: Add Gitlab Apt signing key
  ansible.builtin.get_url:
    url: https://packages.gitlab.com/gpg.key
    dest: /usr/share/keyrings/gitlab.gpg

- name: Add Gitlab Apt repository
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    state: present
    filename: gitlab
  with_items:
    - "deb [signed-by=/usr/share/keyrings/gitlab.gpg] deb https://packages.gitlab.com/gitlab/gitlab-ce/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} main"
    - "deb-src [signed-by=/usr/share/keyrings/gitlab.gpg] https://packages.gitlab.com/gitlab/gitlab-ce/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} main"

- name: Install GitLab
  ansible.builtin.apt:
    name: "gitlab-ce{% if gitlab_version is defined %}={{ gitlab_version }}{% endif %}"
    update_cache: yes
    state: "{{ gitlab_package_state }}"

- name: Configure Gitlab
  ansible.builtin.lineinfile:
    dest: "/etc/gitlab/gitlab.rb"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "present"
  with_items:
      - { regexp: "^(# )?external_url", line: "external_url 'https://{{ ansible_fqdn }}'" }
      - { regexp: "^(# )?letsencrypt\\['enable'\\] =", line: "letsencrypt['enable'] = false" }
      - { regexp: "^(# )?nginx\\['listen_addresses'\\] =", line: "nginx['listen_addresses'] = ['0.0.0.0', '[::]']" }
      - { regexp: "^(# )?nginx\\['ssl_certificate'\\] =", line: "nginx['ssl_certificate'] = '/etc/gitlab/ssl/{{ gitlab_certificate_name }}'" }
      - { regexp: "^(# )?nginx\\['ssl_certificate_key'\\] =", line: "nginx['ssl_certificate_key'] = '/etc/gitlab/ssl/{{ gitlab_certificate_key_name }}'" }
      - { regexp: "^(# )?gitlab_rails\\['smtp_enable'\\] =", line: "gitlab_rails['smtp_enable'] = {{ gitlab_smtp_enable }}" }
      - { regexp: "^(# )?gitlab_rails\\['smtp_address'\\] =", line: "gitlab_rails['smtp_address'] = '{{ gitlab_smtp_address }}'" }
      - { regexp: "^(# )?gitlab_rails\\['smtp_port'\\] =", line: "gitlab_rails['smtp_port'] = {{ gitlab_smtp_port }}" }
      - { regexp: "^(# )?gitlab_rails\\['smtp_user_name'\\] =", line: "gitlab_rails['smtp_user_name'] = '{{ gitlab_smtp_user_name }}'" }
      - { regexp: "^(# )?gitlab_rails\\['smtp_password'\\] =", line: "gitlab_rails['smtp_password'] = '{{ gitlab_smtp_password }}'" }
      - { regexp: "^(# )?gitlab_rails\\['smtp_domain'\\] =", line: "gitlab_rails['smtp_domain'] = '{{ gitlab_smtp_domain }}'" }
      - { regexp: "^(# )?gitlab_rails\\['smtp_authentication'\\] =", line: "gitlab_rails['smtp_authentication'] = '{{ gitlab_smtp_authentication }}'" }
      - { regexp: "^(# )?gitlab_rails\\['smtp_enable_starttls_auto'\\] =", line: "gitlab_rails['smtp_enable_starttls_auto'] = {{ gitlab_smtp_enable_starttls_auto }}" }
      - { regexp: "^(# )?grafana\\['enable'\\] =", line: "grafana['enable'] = false" }
      - { regexp: "^(# )?prometheus\\['enable'\\] =", line: "prometheus['enable'] = false" }
      - { regexp: "^(# )?node_exporter\\['enable'\\] =", line: "node_exporter['enable'] = false" }
      - { regexp: "^(# )?alertmanager\\['enable'\\] =", line: "alertmanager['enable'] = false" }
  notify: restart gitlab