---
- name: Reset Kubernetes component
  ansible.builtin.shell: "kubeadm reset --force"

- name: Create directory for each kubeadmcfg on first etcd node
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/{{ item }}
    state: directory
    mode: '0755'
  run_once: true
  with_items: "{{ ansible_play_hosts }}"

- name: Configure kubeadm
  ansible.builtin.template:
    src: kubeadmcfg.yaml.j2
    dest: "/home/{{ ansible_user }}/{{ item }}/kubeadmcfg.yaml"
  vars:
    host: "{{ item }}"
  run_once: true
  with_items: "{{ ansible_play_hosts }}"

- name: Generating certificate authority files
  ansible.builtin.shell: kubeadm init phase certs etcd-ca
  run_once: true

- name: Create certificates for each member
  ansible.builtin.shell: |
    kubeadm init phase certs etcd-server --config=/home/{{ ansible_user }}/{{ item }}/kubeadmcfg.yaml
    kubeadm init phase certs etcd-peer --config=/home/{{ ansible_user }}/{{ item }}/kubeadmcfg.yaml
    kubeadm init phase certs etcd-healthcheck-client --config=/home/{{ ansible_user }}/{{ item }}/kubeadmcfg.yaml
    kubeadm init phase certs apiserver-etcd-client --config=/home/{{ ansible_user }}/{{ item }}/kubeadmcfg.yaml
    cp -R /etc/kubernetes/pki /home/{{ ansible_user }}/{{ item }}/
    find /home/{{ ansible_user }}/{{ item }} -name ca.key -type f -delete
  run_once: true
  with_items: "{{ ansible_play_hosts }}"

- name: Archive configuration files to copy
  ansible.builtin.archive:
    path: "/home/{{ ansible_user }}/{{ item }}"
    dest: "{{ item }}.tgz"
  run_once: true
  with_items: "{{ ansible_play_hosts }}"
  when: item != play_hosts[0]

- name: Fetch archive configuration files from first node
  ansible.builtin.fetch:
    src: "/home/{{ ansible_user }}/{{ item }}.tgz"
    dest: "/tmp/{{ item }}.tgz"
    flat: yes
  run_once: true
  with_items: "{{ ansible_play_hosts }}"
  when: item != play_hosts[0]

- name: Unarchive configuration paired files to others nodes
  ansible.builtin.unarchive:
    src: "/tmp/{{ inventory_hostname }}.tgz"
    dest: "/home/{{ ansible_user }}"
  when: inventory_hostname != play_hosts[0]

- name: Move pki to /etc/kubernetes/
  ansible.builtin.shell: mv -fi /home/{{ ansible_user }}/{{ inventory_hostname }}/pki /etc/kubernetes/

- name: Create the static pod manifests
  ansible.builtin.shell: kubeadm init phase etcd local --config=/home/{{ ansible_user }}/{{ inventory_hostname }}/kubeadmcfg.yaml
  notify: restart kubelet

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Wait for port 2379 to become open on the host
  ansible.builtin.wait_for:
    port: 2379
    delay: 10

- name: Clean files on etcd nodes
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ ansible_play_hosts }} + {{ ansible_play_hosts | map('regex_replace', '(.*)', '\\1.tgz') | list }}"

- name: Clean files on localhost
  become: no
  ansible.builtin.file:
    path: /tmp/{{ item }}
    state: absent
  delegate_to: localhost
  with_items: "{{ ansible_play_hosts | map('regex_replace', '(.*)', '\\1.tgz') | list }}"