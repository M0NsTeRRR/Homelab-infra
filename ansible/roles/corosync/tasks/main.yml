---
- name: Open required ports
  community.general.ufw:
    rule: allow
    port: "5405"
    proto: udp

- name: Install Corosync
  ansible.builtin.apt:
    name: corosync
    state: present
  notify: enable corosync

- name: Deleting /etc/corosync/authkey
  ansible.builtin.file:
    path: /etc/corosync/authkey
    state: absent
  run_once: true
  when: corosync_force_regenerate_authkey is defined and
        corosync_force_regenerate_authkey

- name: Checking if /etc/corosync/authkey exists
  ansible.builtin.stat:
    path: /etc/corosync/authkey
  register: check_authkey_file

- name: Install haveged to increase entropy for corosync-keygen
  ansible.builtin.apt:
    name: haveged
    state: present
  run_once: true
  when: not check_authkey_file.stat.exists

- name: Generating /etc/corosync/authkey file
  ansible.builtin.command: /usr/sbin/corosync-keygen
  run_once: true
  when: not check_authkey_file.stat.exists

- name: Waiting for /etc/corosync/authkey file
  ansible.builtin.wait_for:
    path: /etc/corosync/authkey
    timeout: 30
  when: inventory_hostname == play_hosts[0]

- name: Fetching /etc/corosync/authkey to /tmp
  ansible.builtin.fetch:
    src: /etc/corosync/authkey
    dest: /tmp/authkey
    flat: yes
  run_once: true
  register: authkey

- name: Synchronizing /etc/corosync/authkey everywhere
  ansible.builtin.copy:
    src: /tmp/authkey
    dest: /etc/corosync/authkey
    mode: 0400
  notify: restart corosync

- name: Cleaning /tmp/authkey file for security reason
  become: no
  ansible.builtin.file:
    path: /tmp/authkey
    state: absent
  delegate_to: localhost

- name: Configure corosync
  ansible.builtin.template:
    src: corosync.conf.j2
    dest: /etc/corosync/corosync.conf
  notify:
    - restart corosync

- ansible.builtin.meta: flush_handlers