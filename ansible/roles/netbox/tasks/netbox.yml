---
- name: Install required packages
  ansible.builtin.apt:
    pkg:
      - python3-pip
      - python3-venv
      - python3-dev
      - build-essential
      - libxml2-dev
      - libxslt1-dev
      - libffi-dev
      - libpq-dev
      - libssl-dev
      - zlib1g-dev
    state: present

- name: Create netbox folder
  ansible.builtin.file:
    state: directory
    name: /opt/netbox

- name: Check if netbox is already installed
  ansible.builtin.stat:
    path: /opt/netbox/netbox
  register: netbox

- name: "Download netbox version {{ netbox_version }}"
  ansible.builtin.get_url:
    url: "https://github.com/netbox-community/netbox/archive/v{{ netbox_version }}.tar.gz"
    dest: /tmp/netbox.tar.gz
  when: not netbox.stat.exists or netbox_force_install

- name: Extract netbox files
  ansible.builtin.unarchive:
    src: /tmp/netbox.tar.gz
    dest: /opt/netbox
    remote_src: yes
    extra_opts: [--strip-components=1]
  when: not netbox.stat.exists or netbox_force_install

- name: Add netbox group
  ansible.builtin.group:
    name: netbox
    system: yes
    state: present

- name: Add netbox user
  ansible.builtin.user:
    name: netbox
    system: yes
    create_home: false
    shell: /usr/sbin/nologin
    group: netbox

- name: Fix permissions on /opt/netbox/netbox/media/
  ansible.builtin.file:
    path: /opt/netbox/netbox/media/
    owner: netbox
    group: netbox

- name: Install required python packages
  ansible.builtin.pip:
    name:
      - virtualenv
      - setuptools

- name: Install netbox python packages
  pip:
    requirements: /opt/netbox/requirements.txt
    virtualenv: /opt/netbox/venv

- name: Configure netbox
  template:
    src: configuration.py.j2
    dest: /opt/netbox/netbox/netbox/configuration.py
  notify:
    - restart netbox.service

- name: Migrate netbox database
  shell:
    cmd: |
      . /opt/netbox/venv/bin/activate
      python3 manage.py migrate
    chdir: /opt/netbox/netbox/

- name: Create a netbox super user
  shell:
    cmd: |
      . /opt/netbox/venv/bin/activate
      python3 manage.py createsuperuser --no-input
    chdir: /opt/netbox/netbox/
  environment:
    DJANGO_SUPERUSER_USERNAME: admin
    DJANGO_SUPERUSER_EMAIL: "{{ netbox_superuser_email }}"
    DJANGO_SUPERUSER_PASSWORD: "{{ netbox_superuser_password }}"
  register: netbox_user
  ignore_errors: yes

- name: Check if user was created
  fail:
    msg: "{{ netbox_user.stderr }}"
  when: 'netbox_user.rc == 1 and "That username is already taken" not in netbox_user.stderr'

- name: Collect netbox static files
  shell:
    cmd: |
      . /opt/netbox/venv/bin/activate
      python3 manage.py collectstatic --no-input
    chdir: /opt/netbox/netbox/

- name: Configure gunicorn
  template:
    src: gunicorn.py.j2
    dest: /opt/netbox/gunicorn.py
  notify:
    - restart netbox.service

- name: Create netbox.service
  copy:
    src: /opt/netbox/contrib/netbox.service
    dest: /etc/systemd/system/netbox.service
    remote_src: yes
  notify:
    - restart netbox.service
    - enable netbox.service

- name: Create netbox-rq.service
  copy:
    src: /opt/netbox/contrib/netbox-rq.service
    dest: /etc/systemd/system/netbox-rq.service
    remote_src: yes
  notify:
    - restart netbox-rq.service
    - enable netbox-rq.service