---
- name: Disable SWAP
  shell: |
    swapoff -a

- name: Disable SWAP in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Delete local rsyslog config
  file:
    path: /etc/rsyslog.d/01-client.conf
    state: absent
  notify: restart rsyslog

- name: Install required packages
  apt:
    pkg:
      - apt-transport-https
      - openjdk-8-jre-headless
      - uuid-runtime
      - pwgen
    state: present

- name: Install mongodb
  include_tasks: mongodb.yml

- name: Install elasticsearch
  include_tasks: elasticsearch.yml

- name: Install graylog
  include_tasks: graylog.yml

- name: Get all inputs
  uri:
    url: "https://{{ inventory_hostname }}/api/system/inputs"
    user: admin
    password: "{{ graylog_root_password }}"
    method: GET
    return_content: yes
    validate_certs: no
    status_code: 200
    headers:
      X-Requested-By: cli
  register: inputs
  when: graylog_inputs | length > 0

- name: Provision inputs graylog
  include_tasks: provision_inputs.yml
  with_items: "{{ graylog_inputs }}"

- name: Get all notifications
  uri:
    url: "https://{{ inventory_hostname }}/api/events/notifications"
    user: admin
    password: "{{ graylog_root_password }}"
    method: GET
    return_content: yes
    validate_certs: no
    status_code: 200
    headers:
      X-Requested-By: cli
  register: notifications
  when: graylog_notifications | length > 0

- name: Provision notifications graylog
  include_tasks: provision_notifications.yml
  with_items: "{{ graylog_notifications }}"

- name: Get all notifications
  uri:
    url: "https://{{ inventory_hostname }}/api/events/notifications"
    user: admin
    password: "{{ graylog_root_password }}"
    method: GET
    return_content: yes
    validate_certs: no
    status_code: 200
    headers:
      X-Requested-By: cli
  register: notifications
  when: graylog_notifications | length > 0

- name: Get all events
  uri:
    url: "https://{{ inventory_hostname }}/api/events/definitions"
    user: admin
    password: "{{ graylog_root_password }}"
    method: GET
    return_content: yes
    validate_certs: no
    status_code: 200
    headers:
      X-Requested-By: cli
  register: events
  when: graylog_events | length > 0

- name: Provision events graylog
  include_tasks: provision_events.yml
  with_items: "{{ graylog_events }}"