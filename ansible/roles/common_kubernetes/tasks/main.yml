---
- name: Install required packages by kubernetes
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - curl
    state: present

- name: Update kernel settings
  become: yes
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    state: present
    reload: yes
  with_items:
    - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
    - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }

- name: Disable SWAP
  ansible.builtin.shell: |
    swapoff -a

- name: Disable SWAP in fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Check if br_netfilter module is loaded
  ansible.builtin.shell: |
    set -o pipefail
    lsmod | grep br_netfilter
  register: status_br_netfilter

- name: Load the br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    state: present
  when: '"br_netfilter" not in status_br_netfilter.stdout'

- name: Enable the br_netfilter module at boot
  ansible.builtin.template:
    src: br_netfilter.conf.j2
    dest: /etc/modprobe.d/br_netfilter.conf

- name: Add kubernetes Apt signing key
  ansible.builtin.apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  retries: 3
  delay: 3

- name: Add kubernetes Apt repository
  ansible.builtin.apt_repository:
    repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    filename: kubernetes

- name: Install kubelet and kubeadm
  ansible.builtin.apt:
    pkg:
      - kubelet
      - kubeadm
    state: present

- name: Mark kubelet and kubeadm packages as hold
  ansible.builtin.dpkg_selections:
    name: "{{ item.name }}"
    selection: hold
  with_items:
    - { name: 'kubelet' }
    - { name: 'kubeadm' }
