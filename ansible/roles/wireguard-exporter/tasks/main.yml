---
- name: Open required ports
  ufw:
    rule: allow
    port: "9586"
    proto: tcp

- name: Install golang
  apt:
    name: golang
    state: present

- name: Create wireguard-exporter folder
  file:
    state: directory
    name: /opt/exporter/wireguard/build

- name: Check if wireguard-exporter is already installed
  stat:
    path: /usr/local/bin/wireguard_exporter
  register: wireguard_exporter

- name: "Download wireguard-exporter version {{ wireguard_exporter_version }}"
  get_url:
    url: "https://github.com/mdlayher/wireguard_exporter/archive/v{{ wireguard_exporter_version }}.tar.gz"
    dest: /tmp/wireguard-exporter.tar.gz
  when: not wireguard_exporter.stat.exists

- name: Extract wireguard-exporter files
  unarchive:
    src: /tmp/wireguard-exporter.tar.gz
    dest: /opt/exporter/wireguard/build
    remote_src: yes
    list_files: yes
    extra_opts: ['--strip-components=1']
  when: not wireguard_exporter.stat.exists

- name: Compile sources
  shell: /usr/bin/go build -o /opt/exporter/wireguard/build/cmd/wireguard_exporter
  args:
    chdir: /opt/exporter/wireguard/build/cmd/wireguard_exporter
  when: not wireguard_exporter.stat.exists

- name: Copy wireguard-exporter binary to /usr/local/bin
  copy:
    src: /opt/exporter/wireguard/build/cmd/wireguard_exporter/wireguard_exporter
    dest: /usr/local/bin/wireguard_exporter
    mode: 0700
    remote_src: yes
  notify: restart wireguard-exporter.service
  when: not wireguard_exporter.stat.exists

- name: Create wireguard-exporter configuration directory
  file:
    dest: /etc/wireguard_exporter/
    state: directory

- name: Configure wireguard-exporter
  template:
    src: peers.toml.j2
    dest: /etc/wireguard_exporter/peers.toml
  notify: restart wireguard-exporter.service

- name: Create systemd service file
  template:
    src: wireguard-exporter.service.j2
    dest: /etc/systemd/system/wireguard-exporter.service
  notify:
    - enable wireguard-exporter.service
    - restart wireguard-exporter.service