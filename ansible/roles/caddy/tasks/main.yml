---
- name: "Open port {{ item.port }}/{{ item.proto }}"
  community.general.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  with_items:
    - { port: "80", proto: tcp }
    - { port: "443", proto: tcp }
    - { port: "443", proto: udp }
    - { port: "9982", proto: tcp }

- name: Add caddy group
  ansible.builtin.group:
    name: caddy
    system: yes
    state: present

- name: Add caddy user
  ansible.builtin.user:
    name: caddy
    home: /var/lib/caddy
    shell: /usr/sbin/nologin
    group: caddy

- name: Add Caddy Apt signing key
  ansible.builtin.apt_key:
    id: 155B6D79CA56EA34
    url: https://dl.cloudsmith.io/public/caddy/stable/gpg.key
    state: present
  retries: 3
  delay: 3

- name: Add Caddy Apt repository
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    state: present
    filename: caddy-stable
  with_items:
    - "deb https://dl.cloudsmith.io/public/caddy/testing/deb/debian any-version main"
    - "deb-src https://dl.cloudsmith.io/public/caddy/testing/deb/debian any-version main"

- name: Install Caddy
  ansible.builtin.apt:
    name: "caddy{% if caddy_version is defined %}={{ caddy_version }}{% endif %}"
    update_cache: yes
    state: "{{ caddy_package_state }}"
  notify:
    - daemon-reload
    - enable caddy.service
    - restart caddy.service

- name: Copy certificate to remote location
  ansible.builtin.copy:
    src: "{{ caddy_exporter_local_path_certificate }}"
    dest: "/etc/ssl/certs/caddy_exporter.crt"
    owner: caddy
    group: caddy
  notify: restart caddy.service

- name: Copy certificate key to remote location
  ansible.builtin.copy:
    src: "{{ caddy_exporter_local_path_certificate_key }}"
    dest: "/etc/ssl/certs/caddy_exporter.pem"
    owner: caddy
    group: caddy
  notify: restart caddy.service

- name: Add CA cert
  ansible.builtin.template:
    src: "{{ caddy_exporter_local_path_ca_certificate }}"
    dest: /etc/caddy/ca.crt
    owner: caddy
    group: caddy
  notify: restart caddy.service

- name: Create /etc/caddy/conf.d folder
  ansible.builtin.file:
    state: directory
    name: /etc/caddy/conf.d
    owner: caddy
    group: caddy

- name: Configure default Caddy config
  ansible.builtin.template:
    src: default.j2
    dest: /etc/caddy/Caddyfile
    owner: caddy
    group: caddy
  notify:
    - restart caddy.service

- name: Configure Caddy
  ansible.builtin.template:
    src: Caddyfile.j2
    dest: "/etc/caddy/conf.d/{{ item.names[0] }}.conf"
    owner: caddy
    group: caddy
  with_items: "{{ caddy_domains }}"
  notify:
    - restart caddy.service
