---
- name: Open required ports
  ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  with_items:
    - { port: 3478, proto: udp }
    - { port: 5514, proto: tcp }
    - { port: 8080, proto: tcp }
    - { port: 8443, proto: tcp }
    - { port: 8880, proto: tcp }
    - { port: 8843, proto: tcp }
    - { port: 6789, proto: tcp }
    - { port: 27117, proto: tcp }
    - { port: 5656:5699, proto: udp }
    - { port: 10001, proto: udp }
    - { port: 1900, proto: udp }

- name: Install gnupg-agent
  apt:
    name: gnupg-agent
    state: present

- name: Install pip3
  apt:
    name: python3-pip
    state: present

- name: Install pyOpenSSL
  pip:
    name: pyOpenSSL

- name: Add MongoDB Apt signing key
  apt_key:
    url: "https://www.mongodb.org/static/pgp/server-3.6.asc"
    state: present
  retries: 3
  delay: 3

- name: Add MongoDB Apt repository
  apt_repository:
    repo: "deb [arch=amd64] http://repo.mongodb.org/apt/{{ ansible_distribution|lower }} xenial/mongodb-org/3.6 multiverse"
    state: present
    filename: mongodb-org

- name: Install libssl1.0.0
  apt:
    deb: http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0.0_1.0.2n-1ubuntu5.5_amd64.deb

- name: Install openjdk-8-jre and mongodb-org
  apt:
    update_cache: yes
    pkg:
      - openjdk-8-jre-headless
      - mongodb-org=3.6.20
      - mongodb-org-server=3.6.20
      - mongodb-org-shell=3.6.20
      - mongodb-org-mongos=3.6.20
      - mongodb-org-tools=3.6.20
    state: present

- name: Install unifi
  apt:
    deb: 'https://dl.ui.com/unifi/{{ unifi_version }}/unifi_sysvinit_all.deb'
  notify: restart unifi

- name: Copy certificate key to remote location
  copy:
    src: "{{ unifi_local_path_certificate_key }}"
    dest: /var/lib/unifi/client.pem

- name: Get certificate content
  set_fact:
    unifi_cert_content: "{{ lookup('file', unifi_local_path_certificate) }}"

- name: Find root certificate
  certificate_complete_chain:
    input_chain: "{{ unifi_cert_content }}"
    root_certificates: "{{ unifi_local_absolute_path_ca_certificate }}"
  delegate_to: localhost
  register: fullchain

- name: Save fullchain certificate
  copy:
    content: "{{ ''.join(fullchain.complete_chain) }}"
    dest: /var/lib/unifi/fullchain.crt

- name: Generate PKCS#12 file
  openssl_pkcs12:
    action: export
    path: /var/lib/unifi/cert.p12
    privatekey_path: /var/lib/unifi/client.pem
    certificate_path: /var/lib/unifi/fullchain.crt
    friendly_name: unifi
    passphrase: "{{ unifi_pkcs12_password }}"
    state: present

- name: Import SSL certificate to unifi keystore
  java_cert:
    pkcs12_path: /var/lib/unifi/cert.p12
    pkcs12_password: "{{ unifi_pkcs12_password }}"
    pkcs12_alias: unifi
    keystore_path: /var/lib/unifi/keystore
    keystore_pass: aircontrolenterprise
    keystore_create: yes
    state: present
  notify: restart unifi