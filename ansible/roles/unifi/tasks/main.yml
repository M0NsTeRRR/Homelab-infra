---
- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Open required ports
  community.general.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    comment: "{{ item.comment }}"
  with_items:
    - { port: 3478, proto: udp, comment: "Unifi STUN" }
    - { port: 5514, proto: tcp, comment: "Unifi syslog" }
    - { port: 8080, proto: tcp, comment: "Unifi device/app communication" }
    - { port: 8443, proto: tcp, comment: "Unifi HTTPS" }
    - { port: 8880, proto: tcp, comment: "Unifi HTTP portal" }
    - { port: 8843, proto: tcp, comment: "Unifi HTTPS portal" }
    - { port: 6789, proto: tcp, comment: "Unifi mobile speedtest" }
    - { port: 27117, proto: tcp, comment: "Unifi local-bound database communication" }
    - { port: 5656:5699, proto: udp, comment: "Unifi AP-EDU broadcasting" }
    - { port: 10001, proto: udp, comment: "Unifi device discovery" }
    - { port: 1900, proto: udp, comment: "Unifi make application discoverable on L2 network" }

- name: Install gnupg-agent
  ansible.builtin.apt:
    name: gnupg-agent
    state: present

- name: Install openjdk-8-jre
  ansible.builtin.apt:
    name: openjdk-8-jre-headless
    update_cache: yes
    state: present

- name: Add Unifi Apt signing key
  ansible.builtin.get_url:
    url: https://dl.ui.com/unifi/unifi-repo.gpg
    dest: /usr/share/keyrings/unifi.gpg

- name: Add Unifi Apt repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/unifi.gpg] https://www.ui.com/downloads/unifi/debian stable ubiquiti"
    state: present
    filename: unifi

- name: Install Unifi
  ansible.builtin.apt:
    name: "unifi{% if unifi_version is defined %}={{ unifi_version }}{% endif %}"
    update_cache: yes
    state: "{{ unifi_package_state }}"

- name: Configure Unifi
  ansible.builtin.lineinfile:
    dest: "/var/lib/unifi/system.properties"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "present"
  with_items:
    - { regexp: '^(# )?unifi.https.hsts=', line: 'unifi.https.hsts=true' }
    - { regexp: '^(# )?unifi.https.ciphers=', line: 'unifi.https.ciphers=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256' }
    - { regexp: '^(# )?unifi.https.sslEnabledProtocols=', line: 'unifi.https.sslEnabledProtocols=TLSv1.2' }
    - { regexp: '^(# )?unifi.https.hsts.max_age=', line: 'unifi.https.hsts.max_age=31536000' }
    - { regexp: '^(# )?unifi.https.hsts.preload=', line: 'unifi.https.hsts.preload=true' }
    - { regexp: '^(# )?unifi.https.hsts.subdomain=', line: 'unifi.https.hsts.subdomain=true' }
  notify: restart unifi