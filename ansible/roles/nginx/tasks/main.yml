---
- name: Install pip3
  ansible.builtin.apt:
    name: python3-pip
    state: present

- name: Install required python package
  ansible.builtin.pip:
    name: cryptography

- name: Install Nginx
  ansible.builtin.apt:
    name: "nginx{% if nginx_version is defined %}={{ nginx_version }}{% endif %}"
    update_cache: yes
    state: "{{ nginx_package_state }}"

- name: Generate Diffie-Hellman parameters
  community.crypto.openssl_dhparam:
    path: /etc/nginx/dhparam.pem

- name: Remove default Nginx configuration
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/nginx/sites-available/default
    - /etc/nginx/sites-enabled/default
    - /var/www/html
  notify: restart nginx

- name: Configure default Nginx configuration
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: "/etc/nginx/nginx.conf"
  notify:
    - restart nginx

- name: Copy certificate to remote location
  ansible.builtin.copy:
    src: "{{ item.local_path_ssl_certificate }}"
    dest: "/etc/ssl/certs/{{ item.name }}.crt"
  with_items: "{{ nginx_configuration }}"
  notify: restart nginx

- name: Copy certificate key to remote location
  ansible.builtin.copy:
    src: "{{ item.local_path_ssl_certificate_key }}"
    dest: "/etc/ssl/certs/{{ item.name }}.pem"
  with_items: "{{ nginx_configuration }}"
  notify: restart nginx

- name: Setup configurations
  ansible.builtin.include_tasks: configure.yml
  with_items: "{{ nginx_configuration }}"