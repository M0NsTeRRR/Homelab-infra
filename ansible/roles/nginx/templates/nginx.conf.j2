server {

  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name {{ nginx_server_name }};

  ssl_certificate /etc/ssl/certs/{{ nginx_name }}.crt;
  ssl_certificate_key /etc/ssl/certs/{{ nginx_name }}.pem;

  ssl_session_cache  builtin:1000  shared:SSL:10m;
  ssl_dhparam /etc/nginx/dhparam.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers on;

  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  {% if nginx_enable_content_security %}add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;{% endif %}
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;


  access_log                /var/log/nginx/{{ nginx_name }}.access.log;

  {% if nginx_static is defined %}
  location /static/ {
    alias {{ nginx_static }};
  }
  {% endif %}

  location / {

    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;

    proxy_pass              {{ nginx_url }};
    proxy_read_timeout      90;
  }
}

server {
  listen 80;
  listen [::]:80;

  server_name {{ nginx_server_name }};

  location / {
    return 301 https://$server_name$request_uri;
  }
}