---
- name: Check certificate status
  ansible.builtin.include_tasks: check_cert.yml

- name: Compute subject_alt_name
  ansible.builtin.set_fact:
    subject_alt_name: "{% if item.subject_alt_name is defined %}{% for alt in item.subject_alt_name %},{{ alt }}{% endfor %}{% else %}{% endif %}"

- name: Generate client OpenSSL private key
  community.crypto.openssl_privatekey:
    path: "/tmp/{{ item.common_name }}.pem"
  delegate_to: localhost
  become: false
  when: item.force_renew or
    self_signed_cert_missing or
    (item.upload_pem and self_signed_private_key_missing) or
    (item.generate_pkcs12 and self_signed_pkcs12_missing) or
    self_signed_cert_expired

- name: Generate client OpenSSL certificate Signing Request
  community.crypto.openssl_csr:
    path: "/tmp/{{ item.common_name }}.csr"
    privatekey_path: "/tmp/{{ item.common_name }}.pem"
    country_name: "{{ item.country }}"
    organization_name: "{{ item.organization }}"
    email_address: "{{ item.admin_email }}"
    common_name: "{{ item.common_name }}"
    subject_alt_name: "DNS:{{ item.common_name }},IP:{{ lookup('community.general.dig', item.common_name) }},IP:{{ lookup('community.general.dig', item.common_name, 'qtype=AAAA') }},DNS:{{ subject_alt_name }}"
  delegate_to: localhost
  become: false
  when: item.force_renew or
    self_signed_cert_missing or
    (item.upload_pem and self_signed_private_key_missing) or
    (item.generate_pkcs12 and self_signed_pkcs12_missing) or
    self_signed_cert_expired

- name: Generate client OpenSSL certificate signed with our CA
  community.crypto.x509_certificate:
    path: "/tmp/{{ item.common_name }}.crt"
    ownca_path: "{{ item.ca_cert_local_path }}"
    ownca_privatekey_path: "{{ item.ca_private_local_path }}"
    csr_path: "/tmp/{{ item.common_name }}.csr"
    ownca_not_after: "{{ item.ownca_not_after }}"
    provider: ownca
  delegate_to: localhost
  become: false
  when: item.force_renew or
    self_signed_cert_missing or
    (item.upload_pem and self_signed_private_key_missing) or
    (item.generate_pkcs12 and self_signed_pkcs12_missing) or
    self_signed_cert_expired

- name: Generate pkcs12 certificate
  ansible.builtin.include_tasks: generate_cert_pkcs12.yml
  when: item.generate_pkcs12 and
    (item.force_renew or
    self_signed_cert_missing or
    (item.upload_pem and self_signed_private_key_missing) or
    (item.generate_pkcs12 and self_signed_pkcs12_missing) or
    self_signed_cert_expired)

- name: Copy certificates to remote
  ansible.builtin.include_tasks: copy_cert.yml
  with_items: "{{ item.cert_remote_folder }}"
  loop_control:
    loop_var: folder
  register: copy_files
  when: item.force_renew or
    self_signed_cert_missing or
    (item.upload_pem and self_signed_private_key_missing) or
    (item.generate_pkcs12 and self_signed_pkcs12_missing) or
    self_signed_cert_expired

- name: Import SSL certificate to keystore
  community.general.java_cert:
    pkcs12_path: "{{ folder.path }}/{{ item.common_name }}.p12"
    pkcs12_password: "{{ item.pkcs12_passphrase }}"
    pkcs12_alias: "{{ item.pkcs12_friendly_name }}"
    keystore_path: "{{ item.keystore_path }}"
    keystore_pass: "{{ item.keystore_pass }}"
    keystore_create: yes
    state: present
  with_items: "{{ item.cert_remote_folder }}"
  loop_control:
    loop_var: folder
  when: item.generate_pkcs12 and
    (item.force_renew or
    self_signed_cert_missing or
    (item.upload_pem and self_signed_private_key_missing) or
    (item.generate_pkcs12 and self_signed_pkcs12_missing) or
    self_signed_cert_expired)

- name: Restart services that use SSL cert
  ansible.builtin.systemd:
    name: "{{ service }}"
    state: restarted
  with_items: "{{ item.systemd_services }}"
  loop_control:
    loop_var: service
  when: copy_files.changed

- name: Clean local files
  ansible.builtin.file:
    path: "{{ file }}"
    state: absent
  delegate_to: localhost
  with_items:
    - "/tmp/{{ item.common_name }}.pem"
    - "/tmp/{{ item.common_name }}.csr"
    - "/tmp/{{ item.common_name }}.crt"
    - "/tmp/fullchain_{{ item.common_name }}.crt"
    - "/tmp/{{ item.common_name }}.p12"
  loop_control:
    loop_var: file

- name: Update Pdns TLSA entry
  ansible.builtin.include_tasks: pdns_tlsa.yml
  when: self_signed_cert_pdns and 'tlsa' in item